{
  "name": "grunt-tape",
  "version": "0.0.2",
  "description": "Run tap/tape tests from within grunt",
  "homepage": "https://github.com/eugeneware/grunt-tape",
  "repository": {
    "type": "git",
    "url": "https://github.com/eugeneware/grunt-tape"
  },
  "bugs": {
    "url": "https://github.com/eugeneware/grunt-tape/issues"
  },
  "author": {
    "name": "Eugene Ware",
    "email": "eugene@noblesamurai.com",
    "url": "https://github.com/eugeneware"
  },
  "keywords": [
    "gruntplugin",
    "tap",
    "tape",
    "test",
    "testing",
    "node-tap",
    "grunt"
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "licenses": [
    {
      "type": "BSD-3-Clause"
    }
  ],
  "devDependencies": {
    "grunt": "~0.4.0rc2"
  },
  "dependencies": {
    "tape": "~2.3.2",
    "faucet": "0.0.0",
    "through": "~2.3.4"
  },
  "readme": "# grunt-tape\n\nRun tap/tape tests from within grunt\n\n## Getting Started\nThis plugin requires Grunt.\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out\nthe [Getting Started](http://gruntjs.com/getting-started) guide, as it explains\nhow to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as\ninstall and use Grunt plugins. Once you're familiar with that process, you may\ninstall this plugin with this command:\n\n```shell\nnpm install grunt-tape --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile\nwith this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-tape');\n```\n\n## The \"tape\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `tape` to the data object\npassed into `grunt.initConfig()`.\n\n``` js\nmodule.exports = function (grunt) {\n  grunt.initConfig({\n    tape: {\n      options: {\n        pretty: true\n        output: 'console'\n      },\n      files: ['test/**/*.js']\n    }\n  });\n  grunt.loadNpmTasks('grunt-tape');\n  grunt.registerTask('test', ['tape:pretty']);\n  grunt.registerTask('ci', ['tape:ci']);\n  grunt.registerTask('default', ['test']);\n};\n```\n\n### Options\n\n#### options.pretty\nType: `Boolean`\nDefault value: `true`\n\nWhen true, the TAP output will be output through\n[faucet](https://github.com/substack/faucet) and pretty printed to the console.\n\n#### options.output\nType: `String`\nDefault value: `console`\n\nOutputs the TAP output to `stdout` if the output is `'console'`.\nOutputs the TAP output to `options.file` if the output is `file''`.\n\n#### options.file\nType: `String`\n\nWhen `options.output` is `'file'`, then this will be the file location that\nthe TAP output gets written to.\n\n### Usage Examples\n\n#### Default Options\nIn this example, the default options are used to run tests in `tests/*.js`\n\n```js\ngrunt.initConfig({\n  tape: {\n    options: {},\n    files: ['tests/*.js']\n  }\n})\n```\n\n#### Turn off pretty printing and just ouput raw TAP output to stdout\nIn this example, we write TAP to stdout:\n\n```js\ngrunt.initConfig({\n  tape: {\n    options: {\n      pretty: false\n    },\n    files: ['tests/*.js']\n  }\n})\n```\n\n#### Save to file\nIn this example, custom options are used to write the output to a file:\n\n```js\ngrunt.initConfig({\n  tape: {\n    options: {\n      output: 'file',\n      file: './output.tap'\n    },\n    files: ['tests/*.js']\n  }\n})\n```\n",
  "readmeFilename": "README.md",
  "_id": "grunt-tape@0.0.2",
  "dist": {
    "shasum": "04e20d00b3931acbe8c30986ff00098e5c09690a"
  },
  "_from": "grunt-tape@0.0.2",
  "_resolved": "https://registry.npmjs.org/grunt-tape/-/grunt-tape-0.0.2.tgz"
}
